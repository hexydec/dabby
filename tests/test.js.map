{"version":3,"sources":["test.js"],"names":["QUnit","assert","done","$","success","response","url","complete","xhr","statusCode","error","data","foo","bar","dabbyReflection","type","window","test","document","obj","params","foobar","fb","enc","output","date","encodeURIComponent","main","rmain","style","props","outputCC","border","padding","hooks","json","foo2","var","tabindex","name","value","checked","multi","text","i","opt","MouseEvent","bubbles","cancelable","mouseEvent","Event","h1","checkbox","html","newh1","triggered","click","objNode","view","Array","coords","top","left","offset","parseFloat","plain","func","body","divs","count","dabbyDivs","div","e","camelise","letter","dasherise","$$1","nodes","selector","once","context","match","node","keys","Object","len","callback","filterNodes","dabby","not","filter","Boolean","filtered","getVal","val","current","setCss","k","isNaN","remove","propsCC","borderLeftColor","borderLeftStyle","borderLeftWidth","clone","empty","robj","parent","item","obj2","parents","Node","deep","value1","value2","value3","arr","items"],"mappings":"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","sourcesContent":["import { $ } from '../dist/dabby.js';\n\nQUnit.module(\"Ajax\");\r\n\r\nQUnit.test(\"$.ajax\", function (assert) {\r\n\tassert.expect(15);\r\n\tvar done = assert.async(8);\r\n\t$.ajax(\"../tests/assets/sample.html\", {success: function (response, status) {\r\n\t\tassert.equal(status, \"success\", \"Can make an AJAX request\");\r\n\t\tassert.ok(response.indexOf(\"Sample HTML File\") !== -1, \"AJAX request returned correct file\");\r\n\t\tdone();\r\n\t}});\r\n\t$.ajax({\r\n\t\turl: \"../tests/assets/sample.html\",\r\n\t\tsuccess: function (response, status) {\r\n\t\t\tassert.equal(status, \"success\", \"Can make an AJAX request with all settings as object\");\r\n\t\t\tassert.ok(response.indexOf(\"Sample HTML File\") !== -1, \"AJAX request returned correct file\");\r\n\t\t\tdone();\r\n\t\t},\r\n\t\tcomplete: function (xhr, status) {\r\n\t\t\tassert.equal(status, \"success\", \"Can set complete callback\");\r\n\t\t\tassert.ok(xhr.responseText.indexOf(\"Sample HTML File\") !== -1, \"Complete callback returned correct file\");\r\n\t\t\tdone();\r\n\t\t},\r\n\t\tstatusCode: {\r\n\t\t\t200: function (response, status) {\r\n\t\t\t\tassert.equal(status, \"success\", \"Can set statusCode 200 callback\");\r\n\t\t\t\tassert.ok(response.indexOf(\"Sample HTML File\") !== -1, \"Status code 200 callback returned correct file\");\r\n\t\t\t\tdone();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t$.ajax(\"../tests/assets/sample.json\", {success: function (response, status) {\r\n\t\tassert.equal(status, \"success\", \"Can make an AJAX request\");\r\n\t\tassert.equal(response.foo, \"foo\", \"AJAX request returned json\");\r\n\t\tdone();\r\n\t}});\r\n\t$.ajax(\"../tests/assets/404.html\", {error: function (response, status) {\r\n\t\tassert.equal(status, \"error\", \"Can run callback on error\");\r\n\t\tdone();\r\n\t}});\r\n\r\n\t// syncronous\r\n\t$.ajax(\"../tests/assets/sample.js\", {success: function (response, status) {\r\n\t\tassert.equal(status, \"success\", \"Can include a javascript file\");\r\n\t\tassert.ok(dabbyScriptSuccess, \"Javascript file included successfully\");\r\n\t\tdone();\r\n\t}});\r\n\r\n\t$.ajax(\"../tests/assets/sample.js?v=1.0.0\", {success: function (response, status) {\r\n\t\tassert.equal(status, \"success\", \"Can include a javascript file\");\r\n\t\tassert.ok(dabbyScriptSuccess, \"Javascript file included successfully\");\r\n\t\tdone();\r\n\t}});\r\n\r\n\t// jsonp\r\n\t/*$.ajax(\"../tests/assets/jsonp.js\", {dataType: \"jsonp\", success: function (response, status) {\r\n\t\tassert.equal(status, \"success\", \"Can include a javascript file via JSONP\");\r\n\t\tassert.ok(response, \"JSONP response correct\");\r\n\t\tdone();\r\n\t}});*/\r\n});\n\nQUnit.module(\"Ajax\");\r\n\r\nQUnit.test(\"$.get\", function (assert) {\r\n\tassert.expect(8);\r\n\tvar done = assert.async(4);\r\n\r\n\t//basic request\r\n\t$.get(\"../tests/assets/sample.html\", function (response, status) {\r\n\t\tassert.equal(status, \"success\", \"Can make an AJAX request\");\r\n\t\tassert.ok(response.indexOf(\"Sample HTML File\") !== -1, \"AJAX request returned correct file\");\r\n\t\tdone();\r\n\t});\r\n\r\n\t//basic request as object\r\n\t$.get({url: \"../tests/assets/sample.html\", success: function (response, status) {\r\n\t\tassert.equal(status, \"success\", \"Can make an AJAX request\");\r\n\t\tassert.ok(response.indexOf(\"Sample HTML File\") !== -1, \"AJAX request returned correct file\");\r\n\t\tdone();\r\n\t}});\r\n\r\n\t//request with data\r\n\tvar data = {foo: \"foo\", bar: \"bar\"};\r\n\t$.get(\"../tests/assets/reflection.js\", data, function (response, status) {\r\n\t\tassert.equal(status, \"success\", \"Can make an AJAX request\");\r\n\t\tassert.ok(dabbyReflection.foo === data.foo && dabbyReflection.bar === data.bar, \"AJAX request set the posted data\");\r\n\t\tdone();\r\n\t});\r\n\r\n\t// specify data type\r\n\tvar data = {foo: \"foo\", bar: \"bar\", type: \"text\"};\r\n\t$.get(\"../tests/assets/json.txt\", function (response, status) {\r\n\t\tassert.equal(status, \"success\", \"Can make an AJAX request\");\r\n\t\tassert.deepEqual(response, data, \"AJAX response processed the data corretly\");\r\n\t\tdone();\r\n\t}, \"json\");\r\n});\n\nQUnit.module(\"Ajax\");\r\n\r\nQUnit.test(\"$.getScript\", function (assert) {\r\n\tassert.expect(2);\r\n\tvar done = assert.async(1);\r\n\r\n\t//basic request\r\n\twindow.dabbyScriptSuccess = false;\r\n\t$.getScript(\"../tests/assets/sample.js\", function (response, status) {\r\n\t\tassert.equal(status, \"success\", \"Can include a script\");\r\n\t\tassert.ok(window.dabbyScriptSuccess, \"Script included correctly\");\r\n\t\tdone();\r\n\t});\r\n});\n\nQUnit.module(\"Ajax\");\r\n\r\nQUnit.test(\"$.fn.load\", function (assert) {\r\n\tassert.expect(12);\r\n\tvar done = assert.async(2);\r\n\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div><div class=\"testtemp2\"></div>';\r\n\tvar obj = $(\".testtemp, .testtemp2\");\r\n\r\n\t// load HTML\r\n\tobj.load(\"../tests/assets/sample.html\", function (response, status) {\r\n\t\tassert.equal(status, \"success\", \"Can make an AJAX request\");\r\n\t\tassert.ok(response.indexOf(\"Sample HTML File\") !== -1, \"AJAX request returned correct file\");\r\n\t\tassert.equal($(\"p\", this).get(0).innerText, \"Sample HTML File\", \"HTML was successfully inserted into the page\");\r\n\t\tif (this.matches(\".testtemp2\")) { // only done() when run on both\r\n\t\t\tdone();\r\n\t\t}\r\n\t});\r\n\r\n\t// load HTML with selector\r\n\tobj.load(\"../tests/assets/sample.html .test\", function (response, status) {\r\n\t\tassert.equal(status, \"success\", \"Can make an AJAX request\");\r\n\t\tassert.ok(response.indexOf(\"Sample HTML File\") !== -1, \"AJAX request returned correct file\");\r\n\t\tassert.equal($(\".test\", this).get(0).innerText, \"This is inside a selector\", \"HTML was successfully inserted into the page\");\r\n\t\tif (this.matches(\".testtemp2\")) { // only done() when run on both\r\n\t\t\tdone();\r\n\t\t}\r\n\t});\r\n});\n\nQUnit.module(\"Ajax\");\r\n\r\nQUnit.test(\"$.param\", function (assert) {\r\n\tvar params = {\r\n\t\tfoo: \"bar\",\r\n\t\tbar: \"foo\",\r\n\t\tfoobar: {\r\n\t\t\tfoo: \"bar\",\r\n\t\t\tbar: \"foo\",\r\n\t\t},\r\n\t\tfb: [\"foo\", \"bar\", \"foobar\"],\r\n\t\tenc: \"this is=a&test\"\r\n\t},\r\n\t\toutput = \"foo=bar&bar=foo&foobar%5Bfoo%5D=bar&foobar%5Bbar%5D=foo&fb%5B%5D=foo&fb%5B%5D=bar&fb%5B%5D=foobar&enc=this%20is%3Da%26test\";\r\n\tassert.equal($.param(params), output, \"Can encode an array to a query string\");\r\n});\n\nQUnit.module(\"Ajax\");\r\n\r\nQUnit.test(\"$.serialize\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<form class=\"testtemp\">' +\r\n\t\t'<input type=\"input\" name=\"input\" value=\"input\" />' +\r\n\t\t'<input type=\"number\" name=\"number\" value=\"42\" />' +\r\n\t\t'<input type=\"email\" name=\"email\" value=\"dave@angel.com\" />' +\r\n\t\t'<input type=\"datetime-local\" name=\"datetime\" value=\"1999-12-31 23:59:59\" />' +\r\n\t\t'<input type=\"submit\" name=\"submit\" value=\"\" />' +\r\n\r\n\t\t'<input type=\"checkbox\" name=\"checkbox\" value=\"unchecked\" />' +\r\n\t\t'<input type=\"checkbox\" name=\"checkbox-checked\" value=\"checked\" checked=\"checked\" />' +\r\n\r\n\t\t'<input type=\"input\" name=\"in[]\" value=\"input1\" />' +\r\n\t\t'<input type=\"input\" name=\"in[]\" value=\"input2\" />' +\r\n\t\t'<input type=\"input\" name=\"in[]\" value=\"input3\" />' +\r\n\r\n\t\t'<input type=\"radio\" name=\"radio\" value=\"radio1\" />' +\r\n\t\t'<input type=\"radio\" name=\"radio\" value=\"radio2\" checked=\"checked\" />' +\r\n\t\t'<input type=\"radio\" name=\"radio\" value=\"radio3\" />' +\r\n\r\n\t\t'<select name=\"select\">' +\r\n\t\t\t'<option value=\"select1\">Option 1</option>' +\r\n\t\t\t'<option value=\"select2\" selected=\"selected\">Option 2</option>' +\r\n\t\t\t'<option value=\"select3\">Option 3</option>' +\r\n\t\t'</select>' +\r\n\r\n\t\t'<select name=\"multiselect[]\" multiple=\"multiple\">' +\r\n\t\t\t'<option value=\"select1\">Option 1</option>' +\r\n\t\t\t'<option value=\"select2\" selected=\"selected\">Option 2</option>' +\r\n\t\t\t'<option value=\"select3\" selected=\"selected\">Option 3</option>' +\r\n\t\t'</select>' +\r\n\t'</form>';\r\n\tvar date = test.querySelector(\"input[name=datetime]\").value;\r\n\tassert.equal($(\".testtemp\").serialize(), \"input=input&number=42&email=dave%40angel.com&datetime=\"+encodeURIComponent(date)+\"&checkbox-checked=checked&in%5B%5D=input1&in%5B%5D=input2&in%5B%5D=input3&radio=radio2&select=select2&multiselect%5B%5D=select2&multiselect%5B%5D=select3\", \"Can serialize a form\");\r\n});\n\nQUnit.module(\"Attributes\");\r\n\r\nQUnit.test(\"$.fn.attr\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div>';\r\n\tvar main = $(\".testtemp\"),\r\n\t\trmain = document.getElementsByClassName(\"testtemp\")[0],\r\n\t\tstyle = \"padding-top: 10px;\";\r\n\r\n\t// set and get class\r\n\tassert.deepEqual(main.attr(\"class\", \"testtemp testclass\"), main, \"Returns itself when setting class\");\r\n\tassert.equal(rmain.className, \"testtemp testclass\", \"Can set class\");\r\n\tassert.equal(main.attr(\"class\"), \"testtemp testclass\", \"Can retrieve class\");\r\n\tmain.attr(\"class\", \"testtemp\");\r\n\tassert.equal(main.attr(\"class\"), \"testtemp\", \"Can remove class\");\r\n\r\n\t// set and get style\r\n\tassert.deepEqual(main.attr(\"style\", style), main, \"Returns itself when setting style\");\r\n\tassert.equal(rmain.style.cssText, style, \"Can set style\");\r\n\tassert.equal(main.attr(\"style\"), style, \"Can retrieve style\");\r\n\r\n\t// set and get attribute\r\n\tassert.deepEqual(main.attr(\"itemprop\", \"articleBody\"), main, \"Returns itself when setting property\");\r\n\tassert.equal(rmain.getAttribute(\"itemprop\"), \"articleBody\", \"Can set property\");\r\n\tassert.equal(main.attr(\"itemprop\"), \"articleBody\", \"Can retrieve property\");\r\n\tmain.attr(\"itemprop\", null);\r\n\tassert.equal(main.attr(\"itemprop\"), undefined, \"Can remove property\");\r\n\r\n\t// reset\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Attributes\");\r\n\r\nQUnit.test(\"$.fn.addClass\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div>';\r\n\tvar main = $(\".testtemp\"),\r\n\t\trmain = document.getElementsByClassName(\"testtemp\")[0];\r\n\r\n\t// set and get class\r\n\tassert.deepEqual(main.addClass(\"test1\"), main, \"Returns itself when setting class\");\r\n\tassert.equal(rmain.className, \"testtemp test1\", \"Can set class\");\r\n\tmain.addClass(\"test2 test3\");\r\n\tassert.equal(rmain.className, \"testtemp test1 test2 test3\", \"Can set multiple classes\");\r\n\trmain.className = \"testtemp\";\r\n\tmain.addClass([\"new1\", \"new2\"]);\r\n\tassert.equal(rmain.className, \"testtemp new1 new2\", \"Can set multiple classes as an array\");\r\n\r\n\t// reset\r\n\ttest.innerHTML = \"\";\r\n});\r\n\r\nQUnit.test(\"$.removeClass\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div>';\r\n\tvar main = $(\".testtemp\"),\r\n\t\trmain = document.getElementsByClassName(\"testtemp\")[0];\r\n\r\n\t// set and get class\r\n\trmain.className = \"testtemp test1 test2 test3\";\r\n\tassert.deepEqual(main.removeClass(\"test1\"), main, \"Returns itself when setting class\");\r\n\tassert.equal(rmain.className, \"testtemp test2 test3\", \"Can remove class\");\r\n\tmain.removeClass(\"test2 test3\");\r\n\tassert.equal(rmain.className, \"testtemp\", \"Can remove multiple classes\");\r\n\r\n\t// reset\r\n\ttest.innerHTML = \"\";\r\n});\r\n\r\nQUnit.test(\"$.toggleClass\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div>';\r\n\tvar main = $(\".testtemp\"),\r\n\t\trmain = document.getElementsByClassName(\"testtemp\")[0];\r\n\r\n\t// set and get class\r\n\trmain.className = \"testtemp\";\r\n\tassert.deepEqual(main.toggleClass(\"test1\"), main, \"Returns itself when setting class\");\r\n\tassert.equal(rmain.className, \"testtemp test1\", \"Can toggle class on\");\r\n\tmain.toggleClass(\"test1\");\r\n\tassert.equal(rmain.className, \"testtemp\", \"Can toggle class off\");\r\n\tmain.toggleClass(\"test2 test3\");\r\n\tassert.equal(rmain.className, \"testtemp test2 test3\", \"Can toggle multiple classes on\");\r\n\r\n\t// reset\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Attributes\");\r\n\r\nQUnit.test(\"$.fn.css\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div>';\r\n\tvar main = $(\".testtemp\"),\r\n\t\trmain = document.getElementsByClassName(\"testtemp\")[0],\r\n\t\tprops = [\"border-left-color\", \"border-left-style\", \"border-left-width\"],\r\n\t\toutput = {\r\n\t\t\t\"border-left-color\": \"rgb(255, 0, 0)\",\r\n\t\t\t\"border-left-style\": \"solid\",\r\n\t\t\t\"border-left-width\": \"1px\"\r\n\t\t},\r\n\t\toutputCC = {\r\n\t\t\t\"borderLeftColor\": \"rgb(255, 0, 0)\",\r\n\t\t\t\"borderLeftStyle\": \"solid\",\r\n\t\t\t\"borderLeftWidth\": \"1px\"\r\n\t\t};\r\n\r\n\t// retrieve CSS properties\r\n\trmain.style.cssText = 'border: 1px solid red;';\r\n\tassert.equal(main.css(\"border-left-color\"), \"rgb(255, 0, 0)\", \"Can retrieve CSS property\");\r\n\tassert.deepEqual(main.css(props), output, \"Can retrieve multiple CSS properties\");\r\n\r\n\tprops = [\"borderLeftColor\", \"borderLeftStyle\", \"borderLeftWidth\"];\r\n\tassert.deepEqual(main.css(props), outputCC, \"Can retrieve multiple CSS properties with camelCase\");\r\n\r\n\t// set css properties\r\n\trmain.style.cssText = '';\r\n\tassert.deepEqual(main.css(\"border\", \"1px solid red\"), main, \"Dabby object is returned after set\");\r\n\tassert.equal(rmain.style.borderLeftColor, \"red\", \"Can set CSS property\");\r\n\trmain.style.cssText = '';\r\n\tmain.css({border: \"1px solid red\", padding: 10}); // also tests unitless values\r\n\tassert.equal(rmain.style.borderLeftColor, \"red\", \"Can set CSS property through an object\");\r\n\tassert.equal(rmain.style.padding, \"10px\", \"Can set CSS property through an object\");\r\n\r\n\t// uses utils/setcss/setcss.js anyway, so doesn't need extensive testing here\r\n\r\n\t// reset\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Attributes\", function (hooks) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\r\n\thooks.before(function () {\r\n\t\ttest.innerHTML = '<div class=\"testtemp\"></div>';\r\n\t});\r\n\r\n\tQUnit.test(\"$.fn.data\", function (assert) {\r\n\t\tvar main = $(\".testtemp\"),\r\n\t\t\trmain = document.getElementsByClassName(\"testtemp\")[0],\r\n\t\t\tjson = {foo: \"bar\", foo2: \"bar2\"};\r\n\r\n\t\t// set data\r\n\t\tassert.deepEqual(main.data(\"var\", \"value\"), main, \"Returns itself when setting data\");\r\n\t\tassert.equal(main.data(\"var\"), \"value\", \"Can set data\");\r\n\t\tmain.data(\"json\", json);\r\n\t\tassert.deepEqual(main.data(\"json\"), json, \"Can set and get data as a plain object\");\r\n\t\tassert.deepEqual(main.data(), {var: \"value\", json: json}, \"Can retrieve all data from node\");\r\n\t});\r\n\r\n\thooks.after(function () {\r\n\t\ttest.innerHTML = \"\";\r\n\t});\r\n});\n\nQUnit.module(\"Attributes\");\r\n\r\nQUnit.test(\"$.fn.hasClass\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp testtemp2\"></div>';\r\n\tvar obj = $(\".testtemp\");\r\n\r\n\tassert.ok(obj.hasClass(\"testtemp2\"), \"Can detect class\");\r\n\tassert.ok(!obj.hasClass(\"testtemp3\"), \"Can detect class is not on object\");\r\n});\n\nQUnit.module(\"Attributes\");\r\n\r\nQUnit.test(\"$.fn.prop\", function (assert) {\r\n\tvar obj = $(\"<h1>\", {tabindex: 1});\r\n\r\n\tassert.deepEqual(obj, obj.prop(\"title\", \"test\"), \"Returns self on set\");\r\n\tassert.equal(obj.get(0).title, \"test\", \"Can set property\");\r\n\tassert.equal(obj.prop(\"title\"), \"test\", \"Can read property\");\r\n\tassert.equal(obj.prop(\"tabindex\"), 1, \"Can read property\");\r\n\r\n\tvar obj = $(\"<input>\", {type: \"checkbox\", name: \"foo\", value: \"bar\", checked: \"checked\"});\r\n\r\n\tassert.equal(obj.prop(\"checked\"), true, \"Can read boolean property\");\r\n\tassert.equal(obj.prop(\"title\"), \"\", \"Unset property returns undefined\");\r\n});\n\nQUnit.module(\"Attributes\");\r\n\r\nQUnit.test(\"$.fn.val\", function (assert) {\r\n\tvar obj = $(\"<input>\", {type: \"text\", value: \"test\"}),\r\n\t\tmulti = document.createElement(\"select\"),\r\n\t\ttext = $(\"<textarea>\", {text: \"test\"}), // write test for this\r\n\t\ti = 0,\r\n\t\topt;\r\n\r\n\tassert.equal(obj.val(), \"test\", \"Can read value\");\r\n\tassert.deepEqual(obj.val(\"new value\"), obj, \"Returns self when setting value\");\r\n\tassert.equal(obj.val(), \"new value\", \"Can set value\");\r\n\r\n\tmulti.multiple = true;\r\n\tfor (; i < 10; i += 1) {\r\n\t\topt = document.createElement(\"option\");\r\n\t\topt.value = i;\r\n\t\topt.innerHTML = i;\r\n\t\tmulti.appendChild(opt);\r\n\t}\r\n\tobj = $(multi).val([1,3,5]);\r\n\r\n\tassert.deepEqual(obj.val(), [\"1\",\"3\",\"5\"], \"Can set and read multiple values\");\r\n\r\n\ttext.val(\"new value\");\r\n\tassert.equal(text.val(), \"new value\", \"Can set and read value from textarea\");\r\n});\n\nQUnit.module(\"Core\");\r\n\r\n// add mouseevent support\r\n(function () {\r\n\tvar MouseEvent = function (eventType, params) {\r\n\t\tparams = params || { bubbles: false, cancelable: false };\r\n\t    var mouseEvent = document.createEvent('MouseEvent');\r\n\t    mouseEvent.initMouseEvent(eventType, params.bubbles, params.cancelable, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n\t    return mouseEvent;\r\n\t};\r\n\tMouseEvent.prototype = Event.prototype;\r\n\twindow.MouseEvent = MouseEvent;\r\n}());\r\n\r\nQUnit.test(\"$.fn.init\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<h1>test</h1><input type=\"checkbox\" checked=\"checked\" />';\r\n\tvar h1 = test.getElementsByTagName(\"h1\")[0],\r\n\t\tcheckbox = test.querySelector(\"input[type=checkbox]\"),\r\n\t\thtml = '<h1>Hello <strong>How are you?</strong></h1>',\r\n\t\tnewh1 = document.createElement(\"h1\"),\r\n\t\ttriggered = false,\r\n\t\tobj = $(\"<h1>\", {\r\n\t\t\tstyle: \"background-color:red\",\r\n\t\t\ttext: \"test\",\r\n\t\t\tclick: function () {\r\n\t\t\t\ttriggered = true;\r\n\t\t\t}\r\n\t\t}),\r\n\t\tobjNode = obj.get(0);\r\n\r\n\tassert.ok($(\".test\").get(0) === test, \"Can select object by class\");\r\n\tassert.ok($(\".test h1\").get(0) === h1, \"Can select child object\");\r\n\tassert.ok($(\".test > h1\").get(0) === h1, \"Can select direct child object\");\r\n\tassert.ok($(\".test > h1:first-child\").get(0) === h1, \"Can select first child\");\r\n\tassert.ok($(\"input[type=checkbox]\", test).get(0) === checkbox, \"Can select with attributes\");\r\n\tassert.ok($(\"input[type=checkbox]:checked\", test).get(0) === checkbox, \"Can select with attributes\");\r\n\r\n\tassert.ok($($(\".test\")).get(0) === test, \"Can select object from Dabby object\");\r\n\tassert.ok($(test).get(0) === test, \"Can select object from node\");\r\n\tassert.deepEqual($([test, h1]).get(), [test, h1], \"Can select object from node\");\r\n\r\n\tassert.ok($('<h1>').get(0) instanceof HTMLHeadingElement, \"Can create HTML objects\");\r\n\tassert.ok($('<h1/>').get(0) instanceof HTMLHeadingElement, \"Can create HTML objects\");\r\n\tassert.ok($('<h1 />').get(0) instanceof HTMLHeadingElement, \"Can create HTML objects\");\r\n\tassert.ok($('<h1></h1>').get(0) instanceof HTMLHeadingElement, \"Can create HTML objects\");\r\n\r\n\tassert.ok(objNode instanceof HTMLHeadingElement, \"Can create HTML objects\");\r\n\tassert.ok(objNode.innerText === \"test\", \"Can create HTML objects with text attributes\");\r\n\tassert.ok(objNode.style.backgroundColor === \"red\", \"Can create HTML objects with style attributes\");\r\n\r\n\tobjNode.dispatchEvent(new MouseEvent('click', {view: window, bubbles: true, cancelable: true}));\r\n\tassert.ok(triggered, \"Can create HTML objects and attached events\");\r\n\r\n\tassert.equal($(html).get(0).outerHTML, html, \"Can create HTML nodes\");\r\n});\n\nQUnit.module(\"Core\");\r\n\r\nQUnit.test(\"$.fn.each\", function (assert) {\r\n\tvar main = document.getElementsByClassName(\"main\")[0],\r\n\t\th1 = document.getElementsByClassName(\"heading\")[0],\r\n\t\toutput = [];\r\n\t$(\".main, .heading\").each(function () {\r\n\t\toutput.push(this.tagName.toLowerCase());\r\n\t});\r\n\tassert.deepEqual(output, [\"div\", \"h1\"]);\r\n});\n\nQUnit.module(\"Core\");\r\n\r\nQUnit.test(\"$.fn.get\", function (assert) {\r\n\tvar main = document.getElementsByClassName(\"main\")[0],\r\n\t\th1 = document.getElementsByClassName(\"heading\")[0];\r\n\tassert.deepEqual($(\".main, .heading\").get(), [main, h1]);\r\n\tassert.deepEqual($(\".main, .heading\").get(0), main);\r\n});\n\nQUnit.module(\"Core\");\r\n\r\nQUnit.test(\"$.fn.map\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\">first</div><div class=\"testtemp\">second</div>';\r\n\tvar output = $(\".testtemp\").map(function () {\r\n\t\treturn this.innerText;\r\n\t});\r\n\tassert.deepEqual(Array.from(output), [\"first\", \"second\"]);\r\n});\n\nQUnit.module(\"Dimensions\");\r\n\r\nQUnit.test(\"$.fn.offset\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj,\r\n\t\tcoords = {top: 100, left: 100};\r\n\ttest.innerHTML = '<div class=\"testtemp\">test</div>';\r\n\tobj = $(\".testtemp\");\r\n\r\n\tassert.deepEqual(obj.offset(coords), obj, \"Returns self on set unpositioned element\");\r\n\tvar offset = obj.offset();\r\n\toffset.top = parseFloat(offset.top.toFixed(1)); // IE has rounding errors\r\n\toffset.left = parseFloat(offset.left.toFixed(1));\r\n\tassert.deepEqual(offset, coords, \"Can set and retrieve coordinates on unpositioned element\");\r\n\r\n\t// test position relative\r\n\ttest.innerHTML = '<div class=\"testtemp\" style=\"padding: 20px; position: relative;\"><div class=\"testrelative\">test</div></div>';\r\n\tobj = $(\".testrelative\");\r\n\r\n\tassert.deepEqual(obj.offset(coords), obj, \"Returns self on set element with a relatively positioned parent\");\r\n\tvar offset = obj.offset();\r\n\toffset.top = parseFloat(offset.top.toFixed(1)); // IE has rounding errors\r\n\toffset.left = parseFloat(offset.left.toFixed(1));\r\n\tassert.deepEqual(offset, coords, \"Can set and retrieve coordinates on element with a relatively positioned parent\");\r\n\r\n\t// test position relative\r\n\ttest.innerHTML = '<div class=\"testtemp\" style=\"padding: 20px; position: relative; background: red;\"><div class=\"testabsolute\" style=\"position:absolute; top: 20px; left: 20px; background: green;\">test</div></div>';\r\n\tobj = $(\".testabsolute\");\r\n\r\n\tassert.deepEqual(obj.offset(coords), obj, \"Returns self on set absolutely positioned element\");\r\n\tvar offset = obj.offset();\r\n\toffset.top = parseFloat(offset.top.toFixed(1)); // IE has rounding errors\r\n\toffset.left = parseFloat(offset.left.toFixed(1));\r\n\tassert.deepEqual(offset, coords, \"Can set and retrieve coordinates\");\r\n\r\n\t// reset\r\n\t//test.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Dimensions\");\r\n\r\nQUnit.test(\"$.fn.offsetParent\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\r\n\ttest.innerHTML = '<div class=\"testtemp\" style=\"position:relative;\"><div class=\"testinner\"><div class=\"testinner2\"></div></div></div>';\r\n\r\n\tassert.deepEqual($(\".testinner\").offsetParent().get(0), test.getElementsByClassName(\"testinner\")[0].offsetParent, \"Can get offset parent\");\r\n\tassert.deepEqual($(\".testinner2\").offsetParent().get(0), test.getElementsByClassName(\"testinner2\")[0].offsetParent, \"Can get offset parent\");\r\n});\n\nQUnit.module(\"Dimensions\");\r\n\r\nQUnit.test(\"$.fn.scrollLeft/$.fn.scrollTop\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\r\n\ttest.innerHTML = '<div class=\"testtemp\" style=\"width:100px;height:100px;overflow:auto;\"><div class=\"testinner\" style=\"width:1000px;height:1000px;\"></div></div>';\r\n\tvar obj = $(\".testtemp\");\r\n\r\n\tassert.deepEqual(obj, obj.scrollLeft(10), \"Returns self on set\");\r\n\tassert.equal(obj.get(0).scrollLeft, 10, \"Can set scroll value\");\r\n\tassert.equal(obj.scrollLeft(), 10, \"Can get scroll value\");\r\n});\n\nQUnit.module(\"Dimensions\");\r\n\r\nQUnit.test(\"$.fn.width/$.fn.height\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj;\r\n\ttest.innerHTML = '<div class=\"testtemp\" style=\"width: 100px; padding: 10px; border: 10px solid red; margin: 10px;\">test</div>';\r\n\tobj = $(\".testtemp\");\r\n\r\n\t// read width\r\n\tassert.equal(obj.width(), 100, \"Can set and read width\");\r\n\tassert.equal(obj.innerWidth(), 120, \"Can set and read innerWidth\");\r\n\tassert.equal(obj.outerWidth(), 140, \"Can set and read outerWidth\");\r\n\tassert.equal(obj.outerWidth(true), 160, \"Can set and read outerWidth with margin\");\r\n\r\n\t// set width\r\n\tassert.deepEqual(obj.width(120), obj, \"Returns self on set width\");\r\n\tassert.equal(obj.width(), 120, \"Can set and read width\");\r\n\tassert.equal(obj.innerWidth(), 140, \"Can set and read innerWidth\");\r\n\tassert.equal(obj.outerWidth(), 160, \"Can set and read outerWidth\");\r\n\tassert.equal(obj.outerWidth(true), 180, \"Can set and read outerWidth with margin\");\r\n\r\n\t// set innerWidth\r\n\tassert.deepEqual(obj.innerWidth(120), obj, \"Returns self on set innerWidth\");\r\n\tassert.equal(obj.width(), 100, \"Can set and read width\");\r\n\tassert.equal(obj.innerWidth(), 120, \"Can set and read innerWidth\");\r\n\tassert.equal(obj.outerWidth(), 140, \"Can set and read outerWidth\");\r\n\tassert.equal(obj.outerWidth(true), 160, \"Can set and read outerWidth with margin\");\r\n\r\n\t// set outerWidth\r\n\tassert.deepEqual(obj.outerWidth(120), obj, \"Returns self on set outerWidth\");\r\n\tassert.equal(obj.width(), 80, \"Can set and read width\");\r\n\tassert.equal(obj.innerWidth(), 100, \"Can set and read innerWidth\");\r\n\tassert.equal(obj.outerWidth(), 120, \"Can set and read outerWidth\");\r\n\tassert.equal(obj.outerWidth(true), 140, \"Can set and read outerWidth with margin\");\r\n\r\n\t// box-sizing\r\n\ttest.innerHTML = '<div class=\"testtemp\" style=\"box-sizing: content-box; width: 100px; padding: 10px; border: 10px solid red; margin: 10px;\">test</div>';\r\n\tobj = $(\".testtemp\");\r\n\r\n\t// read width\r\n\tassert.equal(obj.width(), 100, \"Can set and read width\");\r\n\tassert.equal(obj.innerWidth(), 120, \"Can set and read innerWidth\");\r\n\tassert.equal(obj.outerWidth(), 140, \"Can set and read outerWidth\");\r\n\tassert.equal(obj.outerWidth(true), 160, \"Can set and read outerWidth with margin\");\r\n\r\n\t// set width\r\n\tassert.deepEqual(obj.width(120), obj, \"Returns self on set width\");\r\n\tassert.equal(obj.width(), 120, \"Can set and read width\");\r\n\tassert.equal(obj.innerWidth(), 140, \"Can set and read innerWidth\");\r\n\tassert.equal(obj.outerWidth(), 160, \"Can set and read outerWidth\");\r\n\tassert.equal(obj.outerWidth(true), 180, \"Can set and read outerWidth with margin\");\r\n\r\n\t// set innerWidth\r\n\tassert.deepEqual(obj.innerWidth(120), obj, \"Returns self on set innerWidth\");\r\n\tassert.equal(obj.width(), 100, \"Can set and read width\");\r\n\tassert.equal(obj.innerWidth(), 120, \"Can set and read innerWidth\");\r\n\tassert.equal(obj.outerWidth(), 140, \"Can set and read outerWidth\");\r\n\tassert.equal(obj.outerWidth(true), 160, \"Can set and read outerWidth with margin\");\r\n\r\n\t// set outerWidth\r\n\tassert.deepEqual(obj.outerWidth(120), obj, \"Returns self on set outerWidth\");\r\n\tassert.equal(obj.width(), 80, \"Can set and read width\");\r\n\tassert.equal(obj.innerWidth(), 100, \"Can set and read innerWidth\");\r\n\tassert.equal(obj.outerWidth(), 120, \"Can set and read outerWidth\");\r\n\tassert.equal(obj.outerWidth(true), 140, \"Can set and read outerWidth with margin\");\r\n\r\n\t// reset\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Events\", function (hooks) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\r\n\thooks.before(function () {\r\n\t\ttest.innerHTML = '<div class=\"testtemp\"></div>';\r\n\t});\r\n\r\n\tQUnit.test(\"$.fn.on/$.fn.off\", function (assert) {\r\n\t\tvar obj = $(\".testtemp\"),\r\n\t\t\tplain = document.getElementsByClassName(\"testtemp\")[0],\r\n\t\t\ttriggered = -1,\r\n\t\t\tfunc = function (e) {\r\n\t\t\t\ttriggered++;\r\n\t\t\t},\r\n\t\t\tname = \"test.trigger\",\r\n\t\t\ti = 0,\r\n\t\t\tbody = $(\"body\");\r\n\r\n\t\t// test singular events\r\n\t\tassert.equal(obj.on(name, func), obj, \"Returns self on set event\");\r\n\t\tfor (; i < 3; i++) {\r\n\t\t\tobj.trigger(name);\r\n\t\t\tassert.equal(triggered, i, \"Can set event\");\r\n\t\t}\r\n\t\t$(test).trigger(name);\r\n\t\tassert.equal(triggered, 2, \"Events are set on the correct object\");\r\n\r\n\t\t// test removing event\r\n\t\tassert.equal(obj.off(name, func), obj, \"Returns self on remove event\");\r\n\t\tobj.trigger(name);\r\n\t\tassert.equal(triggered, 2, \"Events are removed from the correct object\");\r\n\r\n\t\t// test delegated events\r\n\t\ttriggered = -1;\r\n\t\tassert.equal(body.on(name, \".testtemp\", func), body, \"Returns self on set delegated event\");\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\tobj.trigger(name);\r\n\t\t\tassert.equal(triggered, i, \"Can set delegated event\");\r\n\t\t}\r\n\t\t$(test).trigger(name);\r\n\t\tassert.equal(triggered, 2, \"Events are set on the correct object\");\r\n\r\n\t\t// test removing event\r\n\t\tassert.equal(body.off(name, \".testtemp\", func), body, \"Returns self on remove event\");\r\n\t\tobj.trigger(name);\r\n\t\tassert.equal(triggered, 2, \"Events are removed from the correct object\");\r\n\t});\r\n\r\n\thooks.after(function () {\r\n\t\ttest.innerHTML = \"\";\r\n\t});\r\n});\n\nQUnit.module(\"Events\", function (hooks) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\r\n\thooks.before(function () {\r\n\t\ttest.innerHTML = '<div class=\"testtemp\"><div>1</div><div>2</div><div>3</div></div>';\r\n\t});\r\n\r\n\tQUnit.test(\"$.fn.trigger\", function (assert) {\r\n\t\tvar divs = test.querySelectorAll(\".testtemp div\"),\r\n\t\t\tcount = 0,\r\n\t\t\tdabbyDivs = $(\".testtemp div\");\r\n\r\n\t\t[].slice.call(divs).forEach(function (div) {\r\n\t\t\tdiv.onclick = function (e) {\r\n\t\t\t\tcount++;\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t// test\r\n\t\tassert.equal(dabbyDivs.trigger(\"click\"), dabbyDivs, \"Returns self on trigger\");\r\n\t\tassert.equal(count, 3, \"Can trigger events\");\r\n\t});\r\n\r\n\thooks.after(function () {\r\n\t\ttest.innerHTML = \"\";\r\n\t});\r\n});\n\nvar camelise = prop => prop.replace(/-([a-z])/gi, (text, letter) => letter.toUpperCase());\n\nQUnit.module(\"Internal\");\r\n\r\nQUnit.test(\"camelise\", function (assert) {\r\n\tassert.equal(camelise(\"this-is-a-test\"), \"thisIsATest\", \"Can camel case a dashed sentence\");\r\n\tassert.equal(camelise(\"this-is-a-TEST\"), \"thisIsATEST\", \"Can camel case a dashed sentence respecting case\");\r\n});\n\nvar dasherise = prop => prop.replace(/[A-Z]/g, (letter) => \"-\" + letter.toLowerCase());\n\nQUnit.module(\"Internal\");\r\n\r\nQUnit.test(\"dasherise\", function (assert) {\r\n\tassert.equal(dasherise(\"thisIsATest\"), \"this-is-a-test\", \"Can dasherise a camel-cased sentence\");\r\n\tassert.equal(dasherise(\"thisIsATEST\"), \"this-is-a-t-e-s-t\", \"Can dasherise a camel-cased sentence respecting case\");\r\n});\n\nconst $$1 = function dabby(selector, context) {\r\n\tlet nodes = [],\r\n\t\tmatch,\r\n\t\tobj;\r\n\r\n\t// enables new object to be created through $()\r\n\tif (!(this instanceof dabby)) {\r\n\t\treturn new dabby(selector, context);\r\n\r\n\t// if no selector, return empty colletion\r\n\t} else if (selector) {\r\n\r\n\t\t// $ collection\r\n\t\tif (selector instanceof dabby) {\r\n\t\t\treturn selector;\r\n\r\n\t\t// single node\r\n\t\t} else if (selector.nodeType || $$1.isWindow(selector)) {\r\n\t\t\tnodes = [selector];\r\n\r\n\t\t// ready function\r\n\t\t} else if ($$1.isFunction(selector)) {\r\n\t\t\tif (document.readyState !== \"loading\") {\r\n\t\t\t\tselector.call(document, $$1);\r\n\t\t\t} else {\r\n\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", () => {selector.call(document, $$1);}, {once: true});\r\n\t\t\t}\r\n\r\n\t\t// array|NodeList|HTMLCollection of nodes\r\n\t\t} else if (typeof selector !== \"string\") {\r\n\t\t\tnodes = selector;\r\n\r\n\t\t// CSS selector\r\n\t\t} else if (selector.indexOf(\"<\") === -1) {\r\n\t\t\t$$1(context || document).each((i, obj) => {\r\n\t\t\t\tnodes = nodes.concat(Array.from(obj.querySelectorAll(selector)));\r\n\t\t\t});\r\n\r\n\t\t// create a single node and attach properties\r\n\t\t} else if ((match = selector.match(/^<([a-z0-9]+)(( ?\\/)?|><\\/\\1)>$/i)) !== null) {\r\n\t\t\tnodes.push(document.createElement(match[1]));\r\n\r\n\t\t\t// context is CSS attributes\r\n\t\t\tif (context instanceof Object) {\r\n\t\t\t\tobj = $$1(nodes);\r\n\t\t\t\t$$1.each(context, (prop, value) => {\r\n\t\t\t\t\tobj.attr(prop, value);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t// parse HTML into nodes\r\n\t\t} else {\r\n\t\t\t//nodes = (context || doc).createRange().createContextualFragment(selector).childNodes; // not supported in iOS 9\r\n\t\t\tobj = document.createElement(\"template\");\r\n\t\t\tobj.innerHTML = selector;\r\n\t\t\tnodes = obj.content ? obj.content.children : obj.children;\r\n\t\t}\r\n\t}\r\n\r\n\t// build nodes\r\n\tthis.length = 0;\r\n\tArray.from(nodes).forEach(node => { // HTMLCollection objects don't support forEach\r\n\t\tif ([1, 9, 11].indexOf(node.nodeType) > -1 || $$1.isWindow(node)) { // only element, document, documentFragment and window\r\n\t\t\tthis[this.length++] = node;\r\n\t\t}\r\n\t});\r\n\treturn this;\r\n};\r\n\r\n// alias functions\r\n$$1.fn = $$1.prototype;\n\n$$1.each = (obj, callback) => {\r\n\tconst keys = Object.keys(obj),\r\n\t\tlen = keys.length;\r\n\r\n\tfor (let i = 0; i < len; i++) {\r\n\t\tif (callback.call(obj[keys[i]], keys[i], obj[keys[i]]) === false) {\r\n\t\t\tbreak; // stop if callback returns false\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\n\n$$1.fn.each = function (callback) {\r\n\t$$1.each(Array.from(this), callback);\r\n\treturn this;\r\n};\n\n$$1.isWindow = obj => obj !== null && obj === obj.window;\n\n$$1.isFunction = func => func && func.constructor === Function;\n\nvar filterNodes = (dabby, filter, context, not) => {\r\n\tlet func,\r\n\t\tnodes = dabby.nodeType ? [dabby] : Array.from(dabby);\r\n\r\n\t// sort out args\r\n\tif (typeof context === \"boolean\") {\r\n\t\tnot = context;\r\n\t\tcontext = null;\r\n\t}\r\n\r\n\t// function\r\n\tif ($$1.isFunction(filter)) {\r\n\t\tfunc = filter;\r\n\r\n\t// nodes\r\n\t} else {\r\n\r\n\t\t// normalise filters\r\n\t\tif (typeof(filter) === \"string\") {\r\n\t\t\tfilter = [filter];\r\n\t\t} else {\r\n\t\t\tfilter = Array.from($$1(filter, context));\r\n\t\t}\r\n\r\n\t\t// filter function\r\n\t\tfunc = (n, node) => {\r\n\t\t\tlet i = filter.length;\r\n\t\t\twhile (i--) {\r\n\t\t\t\tif (typeof(filter[i]) === \"string\" && node.matches ? node.matches(filter[i]) : node === filter[i]) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t}\r\n\treturn nodes.filter((item, i) => func.call(item, i, item) !== Boolean(not), nodes);\r\n}\n\nQUnit.module(\"Internal\");\r\n\r\nQUnit.test(\"filterNodes\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj,\r\n\t\tfiltered;\r\n\ttest.innerHTML = '<div class=\"testtemp\"><div class=\"class1\"></div><div class=\"class1\"></div><div class=\"class2\"></div><div class=\"class3\"></div></div>';\r\n\tobj = $(\".testtemp div\");\r\n\tfiltered = $(\".testtemp .class1\");\r\n\r\n\tassert.deepEqual(filterNodes(obj, \".class1\"), filtered.get());\r\n\tassert.deepEqual(filterNodes(obj, filtered), filtered.get());\r\n\tassert.deepEqual(filterNodes(obj, filtered.get()), filtered.get());\r\n\tassert.deepEqual(filterNodes(obj, function (i, node) {\r\n\t\treturn node.className === \"class1\";\r\n\t}), filtered.get());\r\n\tassert.deepEqual(filterNodes(obj, \".class2, .class3\", true), filtered.get());\r\n});\n\nvar getVal = (val, obj, i, current) => {\r\n\r\n\t// retrieve as function\r\n\tif ($$1.isFunction(val)) {\r\n\t\tval = val.call(obj, i, $$1.isFunction(current) ? current() : current); // current can be a function\r\n\t}\r\n\treturn val;\r\n}\n\nQUnit.module(\"Internal\");\r\n\r\nQUnit.test(\"getVal\", function (assert) {\r\n\tvar obj = $(\".test\").get(0);\r\n\tassert.equal(getVal(\"test\"), \"test\", \"Can pass-through a value\");\r\n\tassert.equal(getVal(function (i) {return this === obj && !i ? \"test\" : false;}, obj, 0), \"test\", \"When passing function as value, variables and context is correct\");\r\n\t//assert.equal(getVal(380, obj, 0), \"380px\", \"Can return a number as a px value\");\r\n\tassert.equal(getVal(\"380pt\", obj, 0), \"380pt\", \"Can pass through a number that already has a suffix\");\r\n});\n\nvar setCss = (dabby, props, value) => {\r\n\r\n\t// set vars\r\n\tlet name = props,\r\n\t\tkeys,\r\n\t\tk,\r\n\t\tremove;\r\n\r\n\t// normalise props\r\n\tif (typeof props === \"string\") {\r\n\t\tprops = {};\r\n\t\tprops[name] = value;\r\n\t}\r\n\r\n\t// cache properties for loop\r\n\tkeys = Object.keys(props);\r\n\tk = keys.length;\r\n\r\n\t// set properties\r\n\twhile (k--) {\r\n\t\tlet i = dabby.length;\r\n\t\twhile (i--) {\r\n\t\t\tlet val = props[keys[k]] === \"\" ? undefined : getVal(props[keys[k]], dabby[i], k, dabby[i].style[keys[k]]);\r\n\t\t\tif (!isNaN(val)) {\r\n\t\t\t\tval += \"px\";\r\n\t\t\t}\r\n\t\t\tdabby[i].style[remove ? \"removeProperty\" : \"setProperty\"](dasherise(keys[k]), val);\r\n\t\t}\r\n\t}\r\n\treturn dabby;\r\n}\n\nQUnit.module(\"Internal\");\r\n\r\nQUnit.test(\"setCss\", function (assert) {\r\n\tvar main = $(\".main\"),\r\n\t\trmain = document.getElementsByClassName(\"main\")[0],\r\n\t\tprops = {\"border-left-color\": \"red\", \"border-left-style\": \"solid\", \"border-left-width\": \"1px\"},\r\n\t\tpropsCC = {borderLeftColor: \"red\", borderLeftStyle: \"solid\", borderLeftWidth: \"1px\"},\r\n\t\toutput = {\r\n\t\t\t\"border-left-color\": \"rgb(255, 0, 0)\",\r\n\t\t\t\"border-left-style\": \"solid\",\r\n\t\t\t\"border-left-width\": \"1px\"\r\n\t\t};\r\n\r\n\trmain.style.cssText = \"\";\r\n\tassert.deepEqual(setCss(main, \"border-left-color\", \"red\"), main, \"Returns Dabby object when CSS is set\");\r\n\tassert.equal(rmain.style.borderLeftColor, \"red\", \"Can set CSS property\");\r\n\trmain.style.cssText = \"\";\r\n\tsetCss(main, \"borderLeftColor\", \"red\");\r\n\tassert.equal(rmain.style.borderLeftColor, \"red\", \"Can set camelCase CSS property\");\r\n\trmain.style.cssText = \"\";\r\n\tsetCss(main, props);\r\n\tassert.deepEqual(main.css(Object.keys(props)), output, \"Can set multiple CSS properties\");\r\n\trmain.style.cssText = \"\";\r\n\tsetCss(main, propsCC);\r\n\tassert.deepEqual(main.css(Object.keys(props)), output, \"Can set multiple camelCase CSS properties\");\r\n\tsetCss(main, \"borderLeftColor\", function (index, current) {\r\n\t\tassert.equal(current, \"red\", \"Callback function receives current value\");\r\n\t\treturn \"green\";\r\n\t});\r\n\tassert.equal(rmain.style.borderLeftColor, \"green\", \"Can set CSS property through a callback function\");\r\n});\n\nQUnit.module(\"Manipulation\");\r\n\r\nQUnit.test(\"$.fn.clone\", function (assert) {\r\n\tvar clone = $(\".test\").clone(), main = document.getElementsByClassName(\"test\")[0];\r\n\r\n\t// set and get class\r\n\tassert.ok(clone.get(0).className === \"test\" && clone.get(0) !== main, \"Can clone objects\");\r\n});\n\nQUnit.module(\"Manipulation\");\r\n\r\nQUnit.test(\"$.fn.empty\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div>';\r\n\tvar main = document.getElementsByClassName(\"testtemp\")[0];\r\n\tmain.insertAdjacentHTML(\"beforeEnd\", \"<span>Empty</span>\");\r\n\tvar empty = $(\".testtemp\");\r\n\r\n\tassert.deepEqual(empty.empty(), empty, \"Returns itself on empty\");\r\n\tassert.equal(empty.get(0).innerHTML, \"\", \"Can empty node\");\r\n\r\n\t// reset\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Manipulation\");\r\n\r\nQUnit.test(\"$.fn.html\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div>';\r\n\tvar main = $(\".testtemp\"), rmain = document.getElementsByClassName(\"testtemp\")[0];\r\n\trmain.insertAdjacentHTML(\"beforeEnd\", \"<div>Test</div>\");\r\n\tvar obj = $(\".html\");\r\n\r\n\tassert.equal(main.html(), \"<div>Test</div>\", \"Can read html\");\r\n\tvar html = main.html(\"<div>Test</div>\");\r\n\tassert.equal(main.get(0).innerHTML, \"<div>Test</div>\", \"Can set html\");\r\n\r\n\t// reset\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Manipulation\");\r\n\r\nQUnit.test(\"$.fn.prepend\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div>';\r\n\tvar main = $(\".testtemp\"),\r\n\t\trmain = document.getElementsByClassName(\"testtemp\")[0];\r\n\r\n\tassert.deepEqual(main.prepend(\"<div>Test</div>\"), main, \"Returns itself when insert\");\r\n\tassert.equal(main.html(), \"<div>Test</div>\", \"Can insert html\");\r\n\r\n\t// reset\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Manipulation\");\r\n\r\nQUnit.test(\"$.fn.insertTo\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div>';\r\n\tvar main = $(\"<div>Test</div>\"),\r\n\t\trmain = document.getElementsByClassName(\"testtemp\")[0],\r\n\t\ttest;\r\n\r\n\tassert.deepEqual(main.prependTo(\".testtemp\").get(), main.get(), \"Returns itself when inserted\");\r\n\tassert.equal($(\".testtemp\").html(), \"<div>Test</div>\", \"Can insert html\");\r\n\r\n\t// reset\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Manipulation\");\r\n\r\nQUnit.test(\"$.fn.remove\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"><div></div></div><div class=\"testtemp2\"></div>';\r\n\tvar obj = $(\".testtemp, .testtemp2\"),\r\n\t\trobj = Array.from(document.querySelectorAll(\".testtemp, .testtemp2\"));\r\n\r\n\tassert.deepEqual(obj.remove(\".testtemp2\").get(), robj, \"Returns reduced set when removed\");\r\n\tassert.ok(document.getElementsByClassName(\"testtemp2\").length === 0, \"Removed item from DOM\");\r\n});\r\n\r\nQUnit.test(\"$.fn.detach\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"><div class=\"testtemp2\"></div></div>';\r\n\tvar obj = $(\".testtemp\");\r\n\r\n\tassert.deepEqual(obj.detach().get(0), obj.get(0), \"Returns node when it is detached\");\r\n\tassert.deepEqual($(\".testtemp\").get(), [], \"Node has been removed from DOM\");\r\n});\n\nQUnit.module(\"Manipulation\", function (hooks) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\r\n\thooks.before(function () {\r\n\t\ttest.innerHTML = '<div class=\"testtemp\"><div></div><div></div><div></div></div>';\r\n\t});\r\n\r\n\tQUnit.test(\"$.fn.replaceWith\", function (assert) {\r\n\t\t$(\".testtemp div\").replaceWith(\"<h2>\");\r\n\t\tassert.equal($(\".testtemp h2\").length, 3, \"Can replace nodes\");\r\n\t});\r\n\r\n\tQUnit.test(\"$.fn.replaceAll\", function (assert) {\r\n\t\t$(\"<div>\").replaceAll(\".testtemp h2\");\r\n\t\tassert.equal($(\".testtemp div\").length, 3, \"Can replace nodes\");\r\n\t});\r\n\r\n\thooks.after(function () {\r\n\t\ttest.innerHTML = \"\";\r\n\t});\r\n});\n\nQUnit.module(\"Manipulation\");\r\n\r\nQUnit.test(\"$.fn.slice\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div><div class=\"testtemp2\"></div><div class=\"testtemp3\"></div>';\r\n\tvar main = $(\".test > div\");\r\n\r\n\tassert.deepEqual(main.slice(0, 1).get(), [document.getElementsByClassName(\"testtemp\")[0]], \"Can slice nodes\");\r\n\tassert.deepEqual(main.slice(1, 3).get(), $(\".testtemp2, .testtemp3\").get(), \"Can slice nodes\");\r\n});\n\nQUnit.module(\"Manipulation\");\r\n\r\nQUnit.test(\"$.fn.text\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\">This <strong>is</strong> a <span><span><span>test yo</span></span></span></div>';\r\n\tvar obj = $(\".testtemp\");\r\n\r\n\tassert.equal(obj.text(), \"This is a test yo\", \"Can retrieve text\");\r\n\tassert.deepEqual(obj.text(\"This is a test yo\"), obj, \"Returns self on set text\");\r\n\tassert.equal(obj.get(0).textContent, \"This is a test yo\", \"Can set text\");\r\n});\n\nQUnit.module(\"Manipulation\");\r\n\r\nQUnit.test(\"$.fn.unwrap\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"><div class=\"testtemp2\">test 2</div><div class=\"testtemp3\">test 3</div></div>';\r\n\tvar obj = $(\".testtemp2\"),\r\n\t\tparent = $(\".testtemp\");\r\n\r\n\tassert.deepEqual(obj.unwrap().get(), obj.get(), \"Returns self on unwrap\");\r\n\tassert.deepEqual($(\".test > div\").get(), $(\".testtemp2, .testtemp3\").get(), \"Can unwrap node\");\r\n});\n\nQUnit.module(\"Manipulation\");\r\n\r\nQUnit.test(\"$.fn.wrap\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\thtml = '<div class=\"testtemp\"><p>Line 1</p><p>Line 2</p><p>Line 3</p></div>';\r\n\r\n\ttest.innerHTML = html;\r\n\tvar obj = $(\".testtemp p\");\r\n\r\n\tassert.deepEqual(obj.wrap(\"<div>\"), obj, \"Returns self on wrap with html\");\r\n\tassert.equal($(\".testtemp > div > p\").length, 3, \"Can wrap elements with html\");\r\n\r\n\ttest.innerHTML = html;\r\n\tobj = $(\".testtemp p\");\r\n\tassert.deepEqual(obj.wrap(\"<div><span></span</div>\"), obj, \"Returns self on wrap with deep html\");\r\n\tassert.equal($(\".testtemp > div > span > p\").length, 3, \"Can wrap elements with deep html\");\r\n\r\n\ttest.innerHTML = html + '<div class=\"testtemp2\"></div>';\r\n\tobj = $(\".testtemp p\");\r\n\tassert.deepEqual(obj.wrap(\".testtemp2\"), obj, \"Returns self on wrap with existing element\");\r\n\tassert.equal($(\".testtemp > .testtemp2 > p\").length, 3, \"Can wrap elements with existing element\");\r\n\r\n\t// reset\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Manipulation\");\r\n\r\nQUnit.test(\"$.fn.wrapAll\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\thtml = '<div class=\"testtemp\"><p>Line 1</p><p>Line 2</p><p>Line 3</p></div>';\r\n\r\n\ttest.innerHTML = html;\r\n\tvar obj = $(\".testtemp p\");\r\n\r\n\tassert.deepEqual(obj.wrap(\"<div>\"), obj, \"Returns self on wrap with html\");\r\n\tassert.equal($(\".testtemp > div > p\").length, 3, \"Can wrap elements with html\");\r\n\r\n\ttest.innerHTML = html;\r\n\tobj = $(\".testtemp p\");\r\n\tassert.deepEqual(obj.wrap(\"<div><span></span</div>\"), obj, \"Returns self on wrap with deep html\");\r\n\tassert.equal($(\".testtemp > div > span > p\").length, 3, \"Can wrap elements with deep html\");\r\n\r\n\ttest.innerHTML = html + '<div class=\"testtemp2\"></div>';\r\n\tobj = $(\".testtemp p\");\r\n\tassert.deepEqual(obj.wrap(\".testtemp2\"), obj, \"Returns self on wrap with existing element\");\r\n\tassert.equal($(\".testtemp > .testtemp2 > p\").length, 3, \"Can wrap elements with existing element\");\r\n\r\n\t// reset\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Traversal\");\r\n\r\nQUnit.test(\"$.fn.add\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj;\r\n\ttest.innerHTML = '<div class=\"testtemp\">test</div><div class=\"testtemp2\">test 2</div>';\r\n\tobj = $(\".testtemp\");\r\n\tassert.deepEqual(obj.add(\".testtemp2\").get(), $(\".testtemp, .testtemp2\").get(), \"Can add nodes\");\r\n\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Traversal\");\r\n\r\nQUnit.test(\"$.fn.children\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj;\r\n\ttest.innerHTML = '<div class=\"testtemp\">test</div><div class=\"testtemp2\">test 2</div>';\r\n\tobj = $(\".test\");\r\n\r\n\tassert.deepEqual(obj.children().get(), $(\".testtemp, .testtemp2\").get(), \"Can get child nodes\");\r\n\tassert.deepEqual(obj.children(\".testtemp\").get(), $(\".testtemp\").get(), \"Can get and filter child nodes\");\r\n\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Traversal\");\r\n\r\nQUnit.test(\"$.fn.eq\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj;\r\n\ttest.innerHTML = '<div class=\"testtemp\">test</div><div class=\"testtemp\">test 2</div><div class=\"testtemp\">test 3</div>';\r\n\tobj = $(\".testtemp\");\r\n\r\n\tassert.equal(obj.eq(0).get().length, 1, \"Returns only a single node\");\r\n\tassert.equal(obj.eq(0).get(0).innerHTML, \"test\", \"Can select index\");\r\n\tassert.equal(obj.eq(1).get(0).innerHTML, \"test 2\", \"Can select index\");\r\n\tassert.equal(obj.eq(2).get(0).innerHTML, \"test 3\", \"Can select index\");\r\n\tassert.equal(obj.eq(-1).get(0).innerHTML, \"test 3\", \"Can select negative index\");\r\n\tassert.equal(obj.eq(-2).get(0).innerHTML, \"test 2\", \"Can select negative index\");\r\n\tassert.equal(obj.eq(-3).get(0).innerHTML, \"test\", \"Can select negative index\");\r\n\tassert.deepEqual(obj.eq(4).get(), $().get(), \"Returns empty object when selected out of range\");\r\n\tassert.deepEqual(obj.eq(-4).get(), $().get(), \"Returns empty object when selected out of range\");\r\n\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Traversal\");\r\n\r\nQUnit.test(\"$.fn.filter/$.fn.not\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj;\r\n\ttest.innerHTML = '<div class=\"testtemp testtemp1\">test</div><div class=\"testtemp testtemp2\">test 2</div><div class=\"testtemp testtemp3\">test 3</div>';\r\n\tobj = $(\".testtemp\");\r\n\r\n\tassert.deepEqual(obj.filter(\".testtemp2\").get(), $(\".testtemp2\").get(), \"Can filter nodes by selector\");\r\n\tassert.equal(obj.filter(function (i ,item) {return item.innerHTML == \"test\";}).get(0).innerHTML, \"test\", \"Can filter nodes by callback\");\r\n\tassert.equal(obj.filter(function (i, item) {return item.innerHTML != \"test\";}).get().length, 2, \"Can filter nodes by callback\");\r\n\r\n\tassert.deepEqual(obj.not(\".testtemp2\").get(), $(\".testtemp1,.testtemp3\").get(), \"Can negatively filter nodes by selector\");\r\n\tassert.equal(obj.not(function (i, item) {return item.innerHTML != \"test\";}).get(0).innerHTML, \"test\", \"Can negatively filter nodes by callback\");\r\n\tassert.equal(obj.not(function (i, item) {return item.innerHTML == \"test\";}).get().length, 2, \"Can negatively filter nodes by callback\");\r\n\r\n\ttest.innerHTML = \"\";\r\n});\r\n\r\nQUnit.test(\"$.fn.is\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj;\r\n\ttest.innerHTML = '<div class=\"testtemp\">test</div><div class=\"testtemp2\">test 2</div>';\r\n\tobj = $(\".testtemp, .testtemp2\");\r\n\r\n\tassert.ok(obj.is(\".testtemp\"), \"Returns true when node matches selector\");\r\n\tassert.ok(obj.is(document.getElementsByClassName(\"testtemp\")[0]), \"Returns true when node matches element\");\r\n\tassert.ok(obj.is($(\".testtemp\")), \"Returns true when node matches dabby collection\");\r\n\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Traversal\");\r\n\r\nQUnit.test(\"$.fn.find\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj;\r\n\ttest.innerHTML = '<div class=\"testtemp\"><div class=\"class1\"></div><div class=\"class1\"></div><div class=\"class2\"><div class=\"findme\"></div></div><div class=\"class3\"><div class=\"findme\"></div></div></div>';\r\n\tobj = $(\".testtemp\");\r\n\r\n\tassert.deepEqual(obj.find(\".findme\").get(), $(\".testtemp .findme\").get());\r\n\tassert.deepEqual(obj.find(obj.get(0).getElementsByClassName(\"class1\")).get(), $(\".testtemp .class1\").get());\r\n});\n\nQUnit.module(\"Traversal\");\r\n\r\nQUnit.test(\"$.fn.first\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj;\r\n\ttest.innerHTML = '<div class=\"testtemp\"><div class=\"class1\"></div><div class=\"class1\"></div><div class=\"class2\"><div class=\"findme\"></div></div><div class=\"class3\"><div class=\"findme\"></div></div></div>';\r\n\tobj = $(\".testtemp div\");\r\n\r\n\tassert.deepEqual($(\".testtemp div\").first().get(), [$(\".testtemp\").get(0).getElementsByClassName(\"class1\")[0]]);\r\n\tassert.deepEqual($(\".testtemp .findme\").first().get(), [$(\".testtemp\").get(0).getElementsByClassName(\"findme\")[0]]);\r\n});\n\nQUnit.module(\"Traversal\");\r\n\r\nQUnit.test(\"$.fn.has\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj;\r\n\ttest.innerHTML = '<div class=\"testtemp\"><div class=\"testtemp2\">test</div></div>';\r\n\tobj = $(\".test\");\r\n\r\n\tassert.deepEqual(obj.has(\".testtemp\").get(0), obj.get(0), \"Can filter nodes based on children\");\r\n\tassert.deepEqual(obj.has(\".testtemp2\").get(0), obj.get(0), \"Can filter nodes based on children\");\r\n\tassert.deepEqual(obj.has(\".testtemp3\").get(), $().get(), \"Can filter nodes based on children\");\r\n\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Traversal\");\r\n\r\nQUnit.test(\"$.fn.index\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj, obj2;\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div><div class=\"testtemp2\"></div><div class=\"testtemp3\"></div>';\r\n\tobj = $(\".test div\"), obj2 = $(\".test .testtemp2, .test .testtemp3\");\r\n\r\n\tassert.equal(obj2.index(), 1, \"Can find element index amongst its siblings\");\r\n\tassert.equal($(\".test .testtemp3\").index(), 2, \"Can find element index amongst its siblings\");\r\n\r\n\tassert.equal($(\".testtemp\").index(\".test div\"), 0, \"Can find element index in a set from a string selector\");\r\n\tassert.equal($(\".testtemp2\").index(\".test div\"), 1, \"Can find element index in a set from a string selector\");\r\n\tassert.equal($(\".testtemp3\").index(\".test div\"), 2, \"Can find element index in a set from a string selector\");\r\n\r\n\tassert.equal(obj.index($(\".testtemp\").get(0)), 0, \"Can find element index in a set from a element selector\");\r\n\tassert.equal(obj.index($(\".testtemp2\").get(0)), 1, \"Can find element index in a set from a element selector\");\r\n\tassert.equal(obj.index($(\".testtemp3\").get(0)), 2, \"Can find element index in a set from a element selector\");\r\n\r\n\tassert.equal(obj.index($(\".testtemp\")), 0, \"Can find element index in a set from a collecction\");\r\n\tassert.equal(obj.index($(\".testtemp2\")), 1, \"Can find element index in a set from a collecction\");\r\n\tassert.equal(obj.index($(\".testtemp3\")), 2, \"Can find element index in a set from a collecction\");\r\n\r\n\t/*assert.equal($(\".testtemp\").index(obj), 0, \"Can find element index in a set\");\r\n\tassert.equal($(\".testtemp2\").index(obj), 1, \"Can find element index in a set\");\r\n\tassert.equal(obj.index(\".testtemp3\"), 2, \"Can find element index in a set\");\r\n\tassert.equal(obj2.index(\".testtemp3\"), 1, \"Can find element index in a set\");*/\r\n\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Traversal\");\r\n\r\nQUnit.test(\"$.fn.last\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj;\r\n\ttest.innerHTML = '<div class=\"testtemp\"><div class=\"class1\"></div><div class=\"class1\"></div><div class=\"class2\"><div class=\"findme\"></div></div><div class=\"class3\"><div class=\"findme\"></div></div></div>';\r\n\tobj = $(\".testtemp div\");\r\n\r\n\tassert.deepEqual($(\".testtemp div\").last().get(), [$(\".testtemp\").get(0).getElementsByClassName(\"findme\")[1]]);\r\n\tassert.deepEqual($(\".testtemp .class1\").last().get(), [$(\".testtemp\").get(0).getElementsByClassName(\"class1\")[1]]);\r\n});\n\nQUnit.module(\"Traversal\");\r\n\r\nQUnit.test(\"$.fn.next/$.fn.prev\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj;\r\n\ttest.innerHTML = '<div class=\"testtemp\">test</div><div class=\"testtemp2\">test 2</div>';\r\n\tobj = $(\".testtemp\");\r\n\r\n\tassert.deepEqual(obj.next().get(0), $(\".testtemp2\").get(0), \"Returns true when node matches selector\");\r\n\tassert.ok(obj.is(document.getElementsByClassName(\"testtemp\")[0]), \"Returns true when node matches element\");\r\n\tassert.ok(obj.is($(\".testtemp\")), \"Returns true when node matches dabby collection\");\r\n\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Traversal\");\r\n\r\nQUnit.test(\"$.fn.parent/$.fn.parents\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0];\r\n\ttest.innerHTML = '<div class=\"testtemp\"><div class=\"testtemp2\"><div class=\"testtemp3\">test</div></div></div>';\r\n\tvar obj = $(\".testtemp3\"),\r\n\t\tparents = [],\r\n\t\tparent = obj.get(0);\r\n\r\n\tassert.deepEqual(obj.parent().get(), $(\".testtemp2\").get(), \"Can select parent\");\r\n\tassert.deepEqual(obj.parent(\".testtemp2\").get(), $(\".testtemp2\").get(), \"Can select parent with selector\");\r\n\tassert.deepEqual(obj.parent(\".testtemp\").get(), [], \"Doesn't select parent when selector doesn't match\");\r\n\r\n\twhile (parent.parentNode && parent.parentNode.nodeType === Node.ELEMENT_NODE) {\r\n\t\tparents.push(parent.parentNode);\r\n\t\tparent = parent.parentNode;\r\n\t}\r\n\tassert.deepEqual(obj.parents().get(), parents, \"Can select parents\");\r\n});\n\nQUnit.module(\"Traversal\");\r\n\r\nQUnit.test(\"$.fn.siblings\", function (assert) {\r\n\tvar test = document.getElementsByClassName(\"test\")[0],\r\n\t\tobj;\r\n\ttest.innerHTML = '<div class=\"testtemp\"></div><div class=\"testtemp2\"></div><div class=\"testtemp3\"></div>';\r\n\tobj = $(\".testtemp2\");\r\n\r\n\tassert.deepEqual(obj.siblings().get(), $(\".testtemp, .testtemp3\").get(), \"Can get an elements siblings\");\r\n\tassert.deepEqual(obj.siblings(\".testtemp3\").get(), $(\".testtemp3\").get(), \"Can get an elements siblings filtered by a selector\");\r\n\tif (typeof Dabby !== \"undefined\") { // jquery doesn't support refining by object\r\n\t\tassert.deepEqual(obj.siblings($(\".testtemp3\")).get(), $(\".testtemp3\").get(), \"Can get an elements siblings filtered by a dabby object\");\r\n\t\tassert.deepEqual(obj.siblings($(\".testtemp3\").get()).get(), $(\".testtemp3\").get(), \"Can get an elements siblings filtered by a node collection\");\r\n\t}\r\n\ttest.innerHTML = \"\";\r\n});\n\nQUnit.module(\"Utils\");\r\n\r\nQUnit.test(\"$.fn.each\", function (assert) {\r\n\tvar main = document.getElementsByClassName(\"main\")[0],\r\n\t\th1 = document.getElementsByClassName(\"heading\")[0],\r\n\t\toutput = [];\r\n\t$(\".main, .heading\").each(function () {\r\n\t\toutput.push(this.tagName.toLowerCase());\r\n\t});\r\n\tassert.deepEqual(output, [\"div\", \"h1\"]);\r\n});\n\nQUnit.module(\"Utils\");\r\n\r\nQUnit.test(\"$.extend\", function (assert) {\r\n\tassert.deepEqual($.extend({foo: \"foo\"}, {bar: \"bar\"}), {foo: \"foo\", bar: \"bar\"}, \"$.extend simple\");\r\n\tassert.deepEqual($.extend({foo: \"foo\", bar: \"foo\"}, {bar: \"bar\"}), {foo: \"foo\", bar: \"bar\"}, \"$.extend overwrite\");\r\n\tassert.deepEqual($.extend(true, {deep: {foo: \"foo\", bar: \"foo\"}}, {deep: {bar: \"bar\"}}), {deep: {foo: \"foo\", bar: \"bar\"}}, \"$.extend overwrite\");\r\n\tassert.deepEqual(\r\n\t\t$.extend(\r\n\t\t\ttrue,\r\n\t\t\t{\r\n\t\t\t\tfoo: \"foo\",\r\n\t\t\t\tbar: \"foo\",\r\n\t\t\t\tdeep: {\r\n\t\t\t\t\tvalue1: false,\r\n\t\t\t\t\tvalue2: \"no\",\r\n\t\t\t\t\tvalue3: {\r\n\t\t\t\t\t\tvalue: \"foo\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tarr: [1,2]\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tvalue: \"bar\"\r\n\t\t\t\t},\r\n\t\t\t\tdeep: {\r\n\t\t\t\t\tvalue1: true,\r\n\t\t\t\t\tvalue2: \"yes\",\r\n\t\t\t\t\tvalue3: {\r\n\t\t\t\t\t\tvalue: \"bar\",\r\n\t\t\t\t\t\tvalue2: \"foo\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tarr: [3,4]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t), {\r\n\t\t\tfoo: \"foo\",\r\n\t\t\tbar: {\r\n\t\t\t\tvalue: \"bar\"\r\n\t\t\t},\r\n\t\t\tdeep: {\r\n\t\t\t\tvalue1: true,\r\n\t\t\t\tvalue2: \"yes\",\r\n\t\t\t\tvalue3: {\r\n\t\t\t\t\tvalue: \"bar\",\r\n\t\t\t\t\tvalue2: \"foo\"\r\n\t\t\t\t},\r\n\t\t\t\tarr: [3,4]\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"$.extend deep merge\"\r\n\t);\r\n});\n\nQUnit.module(\"Utils\");\r\n\r\nQUnit.test(\"$.isArray\", function (assert) {\r\n\tvar arr = [],\r\n\t\tobj = {};\r\n\tassert.ok($.isArray(arr), \"Returns true when array\");\r\n\tarr.push(\"test\");\r\n\tassert.ok($.isArray(arr), \"Returns true when array\");\r\n\tassert.ok(!$.isArray(obj), \"Returns false when not array\");\r\n\tobj.test = \"test\";\r\n\tassert.ok(!$.isArray(obj), \"Returns false when not array\");\r\n});\n\nQUnit.module(\"Utils\");\r\n\r\nQUnit.test(\"$.isFunction\", function (assert) {\r\n\t[function () {}, $.isFunction, window, document, document.getElementsByClassName(\"test\")[0], \"hi\", 5, 3.14, {}].forEach(function (func, i) {\r\n\t\tassert.equal($.isFunction(func), i < 2, \"Input is\" + (i < 2 ? \"\" : \" not\") + \" function\");\r\n\t});\r\n});\n\nQUnit.module(\"Utilities\", function (hooks) {\r\n\r\n\tQUnit.test(\"$.isPlainObject\", function (assert) {\r\n\r\n\t\tassert.equal($.isPlainObject(document.createElement('div')), false, \"Host object is not plain\");\r\n\t\tassert.equal($.isPlainObject(null), false, \"NULL is not plain\");\r\n\t\tassert.equal($.isPlainObject((function() {function Foo(){}return new Foo()}())), false, \"Instance of other object is not plain\");\r\n\t\tassert.equal($.isPlainObject(5), false, \"Number primitive is not plain\");\r\n\t\tassert.equal($.isPlainObject(\"dabby\"), false, \"String primitive is not plain\");\r\n\t\tassert.equal($.isPlainObject(new Number(6)), false, \"Number object is not plain\");\r\n\t\tassert.equal($.isPlainObject({}), true, \"Empty object is plain\");\r\n\t\tassert.equal($.isPlainObject(new Object()), true, \"New Object is plain\");\r\n\t\tassert.equal($.isPlainObject(Object.create(null)), true, \"Object created from null is plain\");\r\n\t});\r\n});\n\nQUnit.module(\"Utils\");\r\n\r\nQUnit.test(\"$.isWindow\", function (assert) {\r\n\tvar items = [window, document, document.getElementsByClassName(\"test\")[0]];\r\n\titems.forEach(function (key, value) {\r\n\t\tassert.equal($.isWindow(value), value === window, \"Can detect\" + (value === window ? \"\" : \" not\") + \" window\");\r\n\t});\r\n});\n\nQUnit.module(\"Utils\");\r\n\r\nQUnit.test(\"$.map\", function (assert) {\r\n\tvar arr = [\"foo\", \"bar\"],\r\n\t\toutput = [],\r\n\t\tobj = {foo: \"foo\", bar: \"bar\"};\r\n\toutput = $.map(arr, function (item) {\r\n\t\treturn item;\r\n\t});\r\n\tassert.deepEqual(arr, output, \"$.map array\");\r\n\r\n\toutput = $.map(obj, function (item, index) {\r\n\t\treturn item;\r\n\t});\r\n\tassert.deepEqual(arr, output, \"$.map object\");\r\n});\n\n// ajax\r\n// attributes\r\n//import \"./attributes/removeprop/test.js\";\r\n// core\r\n// dimensions\r\n//import \"./dimensions/position/test.js\";\r\n// events\r\n//import \"./events/named/test.js\";\r\n// internals\r\n//import \"./internal/getevents/test.js\";\r\n//import \"./internal/getprop/test.js\";\r\n// manipulation\r\n// traversal\r\n//import \"./traversal/closest/test.js\";\r\n// utilities\n"],"file":"test.js"}